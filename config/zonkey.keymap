#include <input/processors.dtsi>
#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define JP_DQUOTE       AT                // "

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&mkp_input_listener { input-processors = <&zip_temp_layer 5 800>; };

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_L0: to_L0 {
            compatible = "zmk,behavior-macro-one-param";
            label = "TO_L0";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&to 0>;
        };
    };

    behaviors {
        msc_up_down: msc_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "MSC_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        lt_to_L0: lt_to_L0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TO_L0";
            #binding-cells = <2>;
            bindings = <&to_L0>, <&kp>;

            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &mt END E         &kp R          &kp T                                                       &kp Y          &kp U          &kp I      &kp O    &kp P
&kp A             &kp S             &kp D             &lt_to_L0 6 F  &kp G        &kp LS(LC(LG(NUMBER_4)))    &kp RIGHT_BRACKET  &mt HOME H     &lt_to_L0 6 J  &kp K      &kp L    &kp MINUS
&kp LEFT_SHIFT    &kp Z             &kp X             &kp C          &kp V        &kp B                       &kp LEFT_BRACKET   &kp N          &kp M          &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL  &mt LEFT_ALT F11  &mt LEFT_GUI F12  &lt 4 ESCAPE   &lt 1 SPACE  &kp TAB                                        &kp BACKSPACE  &lt 2 ENTER                                               &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_1 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR              &kp PERCENT                                    &kp CARET       &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&none            &none        &none     &none                   &none        &none                      &none  &kp EQUAL       &kp BACKSLASH   &kp PLUS      &kp PIPE              &none
&none            &none        &none     &none                   &none        &none                      &none  &none           &none           &none         &none                 &none
&none            &none        &none     &kp LA(LC(LEFT_ARROW))  &none        &kp LA(LC(RIGHT_ARROW))           &kp LANGUAGE_2  &kp LANGUAGE_1                                                             &none
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_2 {
            bindings = <
&kp N1  &kp N2   &kp N3  &kp N4          &kp N5                                    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&kp N4  &kp N5   &kp N6  &none           &none           &none              &none  &none   &none   &none   &none   &none
&none   &kp N7   &kp N8  &kp N9          &none           &kp UP_ARROW       &none  &none   &none   &none   &none   &none
&none   &kp DOT  &kp N0  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW           &none   &none                           &none
            >;

            sensor-bindings = <&msc_up_down>;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none                  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none           &none  &none                       &none
            >;

            sensor-bindings = <&msc_up_down>;
        };

        DEVICE {
            bindings = <
&bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &none  &kp LA(LC(LG(U)))  &none  &none  &none
&kp LA(LC(LG(A)))  &none         &none         &none         &none         &none       &none  &none  &none              &none  &none  &none
&none              &none         &none         &none         &none         &ind_bat    &none  &none  &none              &none  &none  &none
&none              &none         &none         &none         &none         &none              &none  &kp LA(LC(HOME))                        &none
            >;

            sensor-bindings = <&msc_up_down>;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                  &none  &none  &none     &none     &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &mkp MB1  &mkp MB3  &mkp MB2
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none     &none     &none
&none  &none  &none  &none  &none  &none           &none  &none                                &none
            >;

            sensor-bindings = <&msc_up_down>;
        };

        SCROLL {
            bindings = <
&none             &none         &none         &none  &none                  &none  &none  &none     &none     &none
&none             &none         &none         &none  &none  &none    &none  &none  &none  &mkp MB1  &mkp MB3  &mkp MB2
&kp LEFT_SHIFT    &none         &none         &none  &none  &none    &none  &none  &none  &none     &none     &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &none  &none  &none           &none  &none                                       &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&msc_up_down>;
        };
    };
};
